// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PagHiper.Infra.MySql.Context;

namespace PagHiper.Infra.MySql.Migrations
{
    [DbContext(typeof(MySqlCrudDbContext))]
    [Migration("20220415144348_dd")]
    partial class dd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PagHiper.Domain.Entities.Aluno.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DataAtualizacao")
                        .HasColumnType("timestamp");

                    b.Property<DateTimeOffset?>("DataCadastro")
                        .IsRequired()
                        .HasColumnType("timestamp");

                    b.Property<DateTimeOffset?>("DataNascimento")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("ResponsavelCpf")
                        .HasColumnType("text");

                    b.Property<string>("ResponsavelNome")
                        .HasColumnType("text");

                    b.Property<string>("ResponsavelParentesco")
                        .HasColumnType("text");

                    b.Property<string>("ResponsavelTelefone")
                        .HasColumnType("text");

                    b.Property<string>("Rg")
                        .HasColumnType("text");

                    b.Property<bool>("StatusCadastro")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("StatusFinanceiro")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Aluno.AlunoContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Contato")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("AlunoContato");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Aluno.AlunoMatricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("CampanhaId")
                        .HasColumnType("text");

                    b.Property<string>("CursoId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DataMatricula")
                        .HasColumnType("timestamp");

                    b.Property<string>("NumeroRegistro")
                        .HasColumnType("text");

                    b.Property<string>("PagamentoId")
                        .HasColumnType("text");

                    b.Property<string>("PagamentoTipoId")
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("AlunoMatricula");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Aluno.AlunoParcelas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataPagamentoEfetuado")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime");

                    b.Property<int>("NumeroParcelas")
                        .HasColumnType("int");

                    b.Property<int>("NumeroTotalParcelas")
                        .HasColumnType("int");

                    b.Property<string>("PagamentoEfetuado")
                        .HasColumnType("text");

                    b.Property<string>("PagamentoEfetuadoId")
                        .HasColumnType("text");

                    b.Property<string>("TipoPagamentoId")
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValorEfetuado")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("AlunoParcelas");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Aluno.AlunoTurma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DataIngresso")
                        .HasColumnType("timestamp");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("TurmaId");

                    b.ToTable("AlunoTurma");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Boleto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApiKey")
                        .HasColumnType("text");

                    b.Property<string>("DaysDueDate")
                        .HasColumnType("text");

                    b.Property<string>("DiscountCents")
                        .HasColumnType("text");

                    b.Property<string>("EarlyPaymentDiscountsCents")
                        .HasColumnType("text");

                    b.Property<string>("EarlyPaymentDiscountsDays")
                        .HasColumnType("text");

                    b.Property<bool>("FixedDescription")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LatePaymentFine")
                        .HasColumnType("text");

                    b.Property<string>("NotificationUrl")
                        .HasColumnType("text");

                    b.Property<string>("OpenAfterDayDue")
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .HasColumnType("text");

                    b.Property<string>("PartnersId")
                        .HasColumnType("text");

                    b.Property<string>("PayerCity")
                        .HasColumnType("text");

                    b.Property<string>("PayerComplement")
                        .HasColumnType("text");

                    b.Property<string>("PayerCpfCnpj")
                        .HasColumnType("text");

                    b.Property<string>("PayerDistrict")
                        .HasColumnType("text");

                    b.Property<string>("PayerEmail")
                        .HasColumnType("text");

                    b.Property<string>("PayerName")
                        .HasColumnType("text");

                    b.Property<string>("PayerNumber")
                        .HasColumnType("text");

                    b.Property<string>("PayerPhone")
                        .HasColumnType("text");

                    b.Property<string>("PayerState")
                        .HasColumnType("text");

                    b.Property<string>("PayerStreet")
                        .HasColumnType("text");

                    b.Property<string>("PayerZipCode")
                        .HasColumnType("text");

                    b.Property<string>("PerDayInterest")
                        .HasColumnType("text");

                    b.Property<string>("SellerDescription")
                        .HasColumnType("text");

                    b.Property<string>("ShippingMethods")
                        .HasColumnType("text");

                    b.Property<string>("ShippingPriceCents")
                        .HasColumnType("text");

                    b.Property<string>("TypeBankSlip")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Boleto");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Common.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .HasColumnType("text");

                    b.Property<string>("Uf")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BoletoId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ItemId")
                        .HasColumnType("text");

                    b.Property<string>("PriceCents")
                        .HasColumnType("text");

                    b.Property<string>("Quantity")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BoletoId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AceitaPropaganda")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cupom")
                        .HasColumnType("varchar(7)")
                        .HasMaxLength(7);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14);

                    b.HasKey("Id");

                    b.ToTable("Lead");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Aluno.AlunoContato", b =>
                {
                    b.HasOne("PagHiper.Domain.Entities.Aluno.Aluno", "Aluno")
                        .WithMany("Contatos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Aluno.AlunoMatricula", b =>
                {
                    b.HasOne("PagHiper.Domain.Entities.Aluno.Aluno", "Aluno")
                        .WithOne("Matricula")
                        .HasForeignKey("PagHiper.Domain.Entities.Aluno.AlunoMatricula", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Aluno.AlunoParcelas", b =>
                {
                    b.HasOne("PagHiper.Domain.Entities.Aluno.Aluno", "Aluno")
                        .WithOne("Parcelas")
                        .HasForeignKey("PagHiper.Domain.Entities.Aluno.AlunoParcelas", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Aluno.AlunoTurma", b =>
                {
                    b.HasOne("PagHiper.Domain.Entities.Aluno.Aluno", "Aluno")
                        .WithMany("Turmas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PagHiper.Domain.Entities.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId");
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Common.Endereco", b =>
                {
                    b.HasOne("PagHiper.Domain.Entities.Aluno.Aluno", "Aluno")
                        .WithOne("Endereco")
                        .HasForeignKey("PagHiper.Domain.Entities.Common.Endereco", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PagHiper.Domain.Entities.Item", b =>
                {
                    b.HasOne("PagHiper.Domain.Entities.Boleto", "Boleto")
                        .WithMany("Items")
                        .HasForeignKey("BoletoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
